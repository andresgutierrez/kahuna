syntax = "proto3";

service KeyValuer {
  rpc TrySetKeyValue (GrpcTrySetKeyValueRequest) returns (GrpcTrySetKeyValueResponse);
  rpc TryExtendKeyValue (GrpcTryExtendKeyValueRequest) returns (GrpcTryExtendKeyValueResponse);
  rpc TryDeleteKeyValue (GrpcTryDeleteKeyValueRequest) returns (GrpcTryDeleteKeyValueResponse);
  rpc TryGetKeyValue (GrpcTryGetKeyValueRequest) returns (GrpcTryGetKeyValueResponse);
}

message GrpcTrySetKeyValueRequest {
  string Key = 1;
  optional string Value = 2;
  optional string CompareValue = 3;
  int64 CompareRevision = 4;
  GrpcKeyValueFlags Flags = 5;
  int32 ExpiresMs = 6;
  GrpcKeyValueConsistency Consistency = 7;
}

message GrpcTrySetKeyValueResponse {
  optional string ServedFrom = 1;
  GrpcKeyValueResponseType Type = 2;
  int64 Revision = 3;
}

message GrpcTryExtendKeyValueRequest {
  string Key = 1;
  int32 ExpiresMs = 2;
  GrpcKeyValueConsistency Consistency = 3;
}

message GrpcTryExtendKeyValueResponse {
  optional string ServedFrom = 1;
  GrpcKeyValueResponseType Type = 2;
  int64 Revision = 3;
}

message GrpcTryDeleteKeyValueRequest {
  string Key = 1;
  GrpcKeyValueConsistency Consistency = 2;
}

message GrpcTryDeleteKeyValueResponse {
  optional string ServedFrom = 1;
  GrpcKeyValueResponseType Type = 2;
}

message GrpcTryGetKeyValueRequest {
  string Key = 1;
  GrpcKeyValueConsistency Consistency = 2;
}

message GrpcTryGetKeyValueResponse {
  optional string ServedFrom = 1;
  GrpcKeyValueResponseType Type = 2;
  optional string Value = 3;
  int64 Revision = 4;
  int64 ExpiresPhysical = 5;
  uint32 ExpiresCounter = 6;
}

enum GrpcKeyValueFlags {
  KEYVALUE_FLAGS_NONE = 0;
  KEYVALUE_FLAGS_SET = 1;
  KEYVALUE_FLAGS_SET_IF_EXISTS = 2;
  KEYVALUE_FLAGS_SET_IF_NOT_EXISTS = 3;
  KEYVALUE_FLAGS_SET_IF_EQUAL_TO_VALUE = 4;
  KEYVALUE_FLAGS_SET_IF_EQUAL_TO_REVISION = 5;
}

enum GrpcKeyValueResponseType {
  KEYVALUE_RESPONSE_TYPE_SET = 0;
  KEYVALUE_RESPONSE_TYPE_NOTSET = 1;
  KEYVALUE_RESPONSE_TYPE_EXTENDED = 2;
  KEYVALUE_RESPONSE_TYPE_GOT = 3;
  KEYVALUE_RESPONSE_TYPE_DELETED = 4;
  KEYVALUE_RESPONSE_TYPE_ERRORED = 99;
  KEYVALUE_RESPONSE_TYPE_INVALID_INPUT = 100;
  KEYVALUE_RESPONSE_TYPE_MUST_RETRY = 101;
  KEYVALUE_RESPONSE_TYPE_DOES_NOT_EXIST = 102;
}

enum GrpcKeyValueConsistency {
  KEYVALUE_CONSISTENCY_EPHEMERAL = 0;
  KEYVALUE_CONSISTENCY_LINEARIZABLE = 1;
  KEYVALUE_CONSISTENCY_REPLICATION_CONSISTENT = 2;
}